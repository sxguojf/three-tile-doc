import{_ as a,c as s,o as i,a2 as r}from"./chunks/framework.BZ48x_LH.js";const k=JSON.parse('{"title":"Draco 3D Data Compression","description":"","frontmatter":{},"headers":[],"relativePath":"public/lib/draco/README.md","filePath":"public/lib/draco/README.md","lastUpdated":1761368239000}'),t={name:"public/lib/draco/README.md"};function o(n,e,l,p,d,h){return i(),s("div",null,e[0]||(e[0]=[r(`<h1 id="draco-3d-data-compression" tabindex="-1">Draco 3D Data Compression <a class="header-anchor" href="#draco-3d-data-compression" aria-label="Permalink to &quot;Draco 3D Data Compression&quot;">​</a></h1><p>Draco is an open-source library for compressing and decompressing 3D geometric meshes and point clouds. It is intended to improve the storage and transmission of 3D graphics.</p><p><a href="https://google.github.io/draco/" target="_blank" rel="noreferrer">Website</a> | <a href="https://github.com/google/draco" target="_blank" rel="noreferrer">GitHub</a></p><h2 id="contents" tabindex="-1">Contents <a class="header-anchor" href="#contents" aria-label="Permalink to &quot;Contents&quot;">​</a></h2><p>This folder contains three utilities:</p><ul><li><code>draco_decoder.js</code> — Emscripten-compiled decoder, compatible with any modern browser.</li><li><code>draco_decoder.wasm</code> — WebAssembly decoder, compatible with newer browsers and devices.</li><li><code>draco_wasm_wrapper.js</code> — JavaScript wrapper for the WASM decoder.</li></ul><p>Each file is provided in two variations:</p><ul><li><strong>Default:</strong> Latest stable builds, tracking the project&#39;s <a href="https://github.com/google/draco" target="_blank" rel="noreferrer">master branch</a>.</li><li><strong>glTF:</strong> Builds targeted by the <a href="https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_draco_mesh_compression" target="_blank" rel="noreferrer">glTF mesh compression extension</a>, tracking the <a href="https://github.com/google/draco/tree/gltf_2.0_draco_extension" target="_blank" rel="noreferrer">corresponding Draco branch</a>.</li></ul><p>Either variation may be used with <code>THREE.DRACOLoader</code>:</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dracoLoader </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">DRACOLoader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dracoLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDecoderPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;path/to/decoders/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dracoLoader.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDecoderConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// (Optional) Override detection of WASM support.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Further <a href="https://github.com/google/draco/tree/master/javascript/example#static-loading-javascript-decoder" target="_blank" rel="noreferrer">documentation on GitHub</a>.</p><h2 id="license" tabindex="-1">License <a class="header-anchor" href="#license" aria-label="Permalink to &quot;License&quot;">​</a></h2><p><a href="https://github.com/google/draco/blob/master/LICENSE" target="_blank" rel="noreferrer">Apache License 2.0</a></p>`,13)]))}const g=a(t,[["render",o]]);export{k as __pageData,g as default};
